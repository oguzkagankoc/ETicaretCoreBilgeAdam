@*@model IEnumerable<DataAccess.Entities.Urun>*@
@*@model List<UrunModel>*@ @* Eğer Model List tipinde tanımlanırsa aşağıda DisplayNameFor methodları kullanılamaz *@
@model IEnumerable<UrunModel>

@{
    ViewData["Title"] = "Ürün Listesi";
}

<h1>@ViewData["Title"]</h1>

@*<p>
    <a asp-action="Create">Yeni Ürün</a>
    </p>*@
<p>
    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
    {
        <a asp-action="Create">Yeni Ürün</a>
    }
</p>

@if (TempData["Success"] != null)
{
    <p class="text-success">@TempData["Success"]</p>
}

@*<table class="table">*@
<table id="urunler" class="display" style="width:100%">

    <thead>
        <tr>
            @*<th>
                @Html.DisplayNameFor(model => model.Kategori)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.KategoriAdiDisplay)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Adi)
            </th>

            @*<th>
                @Html.DisplayNameFor(model => model.Aciklamasi)
                </th>*@

            @*<th>
                @Html.DisplayNameFor(model => model.BirimFiyati)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.BirimFiyatiDisplay)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.StokMiktari)
            </th>

            @*<th>
                @Html.DisplayNameFor(model => model.SonKullanmaTarihi)
                </th>*@
            <th>
                @Html.DisplayNameFor(model => model.SonKullanmaTarihiDisplay) (yıl-ay-gün)
            </th>

            @*<th>
                @Html.DisplayNameFor(model => model.Guid)
                </th>
                <th>
                @Html.DisplayNameFor(model => model.CreateDate)
                </th>
                <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
                </th>
                <th>
                @Html.DisplayNameFor(model => model.UpdateDate)
                </th>
                <th>
                @Html.DisplayNameFor(model => model.UpdatedBy)
                </th>
                <th>
                @Html.DisplayNameFor(model => model.IsDeleted)
                </th>*@

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @*<td>
                    @Html.DisplayFor(modelItem => item.Kategori.Adi)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.KategoriAdiDisplay)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Adi)
                </td>

                @*<td>
                    @Html.DisplayFor(modelItem => item.Aciklamasi)
                    </td>*@

                @*<td>
                    @Html.DisplayFor(modelItem => item.BirimFiyati)
                    </td>*@
                @* Birim fiyatın formatlanmamış hali (kullanışsız, okunması zor). *@

                @*<td>
                    @Html.DisplayFor(modelItem => item.BirimFiyati.ToString("C2", new CultureInfo("tr-TR")))
                    </td>*@
                @* View'larda minimum C# kodu yazılmalı, olabildiğince model verileri kullanılmalı.
                    Birim fiyatın formatlanması view'da değil ilgili serviste yapılmalı ve formatlanan özellik (BirimFiyatiDisplay) kullanılmalı.
                *@

                <td>
                    @Html.DisplayFor(modelItem => item.BirimFiyatiDisplay)
                </td>
                @* Birim fiyatın ihtiyacımız olan ilgili servis tarafından formatlanmış hali. *@


                <td>
                    @Html.DisplayFor(modelItem => item.StokMiktari)
                </td>

                @*<td>
                    @Html.DisplayFor(modelItem => item.SonKullanmaTarihi)
                    </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.SonKullanmaTarihiDisplay)
                </td>

                @*<td>
                    @Html.DisplayFor(modelItem => item.Guid)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.CreateDate)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.CreatedBy)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.UpdateDate)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.UpdatedBy)
                    </td>
                    <td>
                    @Html.DisplayFor(modelItem => item.IsDeleted)
                    </td>*@

                <td>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a asp-action="Details" asp-route-id="@item.Id">Detay</a>
                        if (User.IsInRole("Admin"))
                        {
                             @:&nbsp;
                            <text>|&nbsp;</text>
                            @* Razor escape işlemleri için ya @: ya da <text> tag'i kullanılır. *@

                            <a asp-action="Edit" asp-route-id="@item.Id">Düzenle</a>
                            @:&nbsp;| &nbsp;
                            <a asp-action="Delete" asp-route-id="@item.Id">Sil</a>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@*
    DataTables kütüphanesi tüm view'larda kullanılmayacağı için _Layout view'ında eklemek yerine
    sadece ürün listeleme sayfasında kullanılacağı Urunler -> Index view'ında Scripts section'ına
    css ve js kütüphaneleri ile birlikte eklenmelidir.
*@
@section Scripts
{
    @* https://datatables.net/ *@
<link rel="stylesheet" href="~/lib/datatables/css/jquery.dataTables.min.css" />
<script src="~/lib/datatables/js/jquery.dataTables.min.js"></script>
<script>
    //$(document).ready(function() { // içerisindeki kodlar sayfanın yüklenmesi tamamlandıktan sonra çalışır
    $(function() {
        $('#urunler').DataTable({
            language: {
                // Eğer kullanılan metinsel bir dosyada Türkçe karakter sorunu varsa
                // dosya Notepad ile açılıp kodlama (encoding) UTF-8'e değiştirilerek kaydedilmelidir.
                url: "/json/datatablesTurkish.json"
            }
        });
    });
</script>
}